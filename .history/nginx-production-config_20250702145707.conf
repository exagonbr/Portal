# Portal Sabercon - Configuração Nginx Produção
# Frontend: https://portal.sabercon.com.br
# Backend API: https://portal.sabercon.com.br/api

# Configurações globais
user www-data;
worker_processes auto;
worker_rlimit_nofile 65535;
pid /run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # Configurações básicas
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 100M;
    
    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging otimizado
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main buffer=16k flush=2m;
    error_log /var/log/nginx/error.log warn;
    
    # Compressão Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/x-javascript
        application/x-font-ttf
        font/opentype
        image/svg+xml
        image/x-icon;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;
    
    # Cache settings
    proxy_cache_path /var/cache/nginx/portal levels=1:2 keys_zone=portal_cache:10m max_size=1g inactive=60m use_temp_path=off;
    
    # Upstream definitions
    upstream frontend_app {
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream backend_api {
        server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Redirecionamento HTTP para HTTPS
    server {
        listen 80;
        server_name portal.sabercon.com.br www.portal.sabercon.com.br;
        
        # Permitir apenas Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }
        
        # Redirecionar todo o resto para HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # Servidor HTTPS Principal
    server {
        listen 443 ssl http2;
        server_name portal.sabercon.com.br www.portal.sabercon.com.br;
        
        # Configurações SSL (serão configuradas pelo Certbot)
        ssl_certificate /etc/letsencrypt/live/portal.sabercon.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/portal.sabercon.com.br/privkey.pem;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.2 TLSv1.3;
        
        # Headers de segurança
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Rate limiting
        limit_conn conn_limit_per_ip 20;
        limit_conn conn_limit_per_server 1000;
        
        # BACKEND API - https://portal.sabercon.com.br/api/*
        location /api/ {
            # Rate limiting para API
            limit_req zone=api burst=50 nodelay;
            
            # Proxy para backend
            proxy_pass http://backend_api/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Headers específicos para API
            proxy_set_header Content-Type $content_type;
            proxy_set_header Accept application/json;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "https://portal.sabercon.com.br" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-CSRF-Token" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Max-Age 86400 always;
            
            # Preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://portal.sabercon.com.br" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-CSRF-Token" always;
                add_header Access-Control-Max-Age 86400 always;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
            
            # Timeouts para API
            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Buffer settings para API
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
        }
        
        # Rate limiting especial para login
        location /api/auth/login {
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://backend_api/api/auth/login;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "https://portal.sabercon.com.br" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-CSRF-Token" always;
            add_header Access-Control-Allow-Credentials true always;
            
            # Timeouts para login
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # FRONTEND - https://portal.sabercon.com.br/*
        location / {
            # Rate limiting suave para frontend
            limit_req zone=general burst=10 nodelay;
            
            # Proxy para frontend Next.js
            proxy_pass http://frontend_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts otimizados
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache para assets estáticos do Next.js
            location ~* ^/_next/static/ {
                proxy_pass http://frontend_app;
                proxy_cache portal_cache;
                proxy_cache_valid 200 1y;
                proxy_cache_valid 404 1m;
                add_header Cache-Control "public, immutable";
                add_header X-Cache-Status $upstream_cache_status;
                expires 1y;
            }
            
            # Cache para outros assets estáticos
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
                proxy_pass http://frontend_app;
                proxy_cache portal_cache;
                proxy_cache_valid 200 7d;
                proxy_cache_valid 404 1m;
                add_header Cache-Control "public, max-age=604800";
                add_header X-Cache-Status $upstream_cache_status;
                expires 7d;
            }
        }
        
        # Health check endpoints
        location /_health {
            access_log off;
            return 200 "OK - Portal Sabercon Production";
            add_header Content-Type text/plain;
        }
        
        location /api/health {
            proxy_pass http://backend_api/api/health;
            access_log off;
        }
        
        # Nginx status (apenas localhost)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            deny all;
        }
        
        # Bloquear acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(env|log|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
} 