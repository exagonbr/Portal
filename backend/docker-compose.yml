version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: portal-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: portal_sabercon
      POSTGRES_USER: portal_user
      POSTGRES_PASSWORD: portal_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - portal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portal_user -d portal_sabercon"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache e sessões
  redis:
    image: redis:7-alpine
    container_name: portal-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - portal-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes --requirepass redis_password

  # Aplicação Backend (opcional para desenvolvimento)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portal-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: portal_sabercon
      DB_USER: portal_user
      DB_PASSWORD: portal_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      JWT_SECRET: your_jwt_secret_here
      JWT_REFRESH_SECRET: your_jwt_refresh_secret_here
    volumes:
      - ./src:/app/src
      - ./migrations:/app/migrations
      - ./seeds:/app/seeds
    networks:
      - portal-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "https://portal.sabercon.com.br/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Commander (Interface web para Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: portal-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_password
    ports:
      - "8081:8081"
    networks:
      - portal-network
    depends_on:
      - redis
    profiles:
      - tools

  # pgAdmin (Interface web para PostgreSQL)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: portal-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@portal.com
      PGADMIN_DEFAULT_PASSWORD: password123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - portal-network
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  portal-network:
    driver: bridge