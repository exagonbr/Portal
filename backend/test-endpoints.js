const axios = require('axios');

const BASE_URL = 'http://localhost:3001';

async function testEndpoints() {
  console.log('üß™ Testando endpoints do backend...\n');

  // Test health check
  try {
    console.log('1. Testando health check...');
    const response = await axios.get(`${BASE_URL}/health`);
    console.log('‚úÖ Health check OK:', response.data);
  } catch (error) {
    console.log('‚ùå Health check falhou:', error.message);
  }

  // Test queue endpoint (should return 401 without auth)
  try {
    console.log('\n2. Testando endpoint de queue...');
    const response = await axios.get(`${BASE_URL}/queue/next`);
    console.log('‚úÖ Queue endpoint OK:', response.data);
  } catch (error) {
    if (error.response?.status === 401) {
      console.log('‚úÖ Queue endpoint protegido corretamente (401)');
    } else {
      console.log('‚ùå Queue endpoint erro:', error.message);
    }
  }

  // Test cache endpoint (should return 401 without auth)
  try {
    console.log('\n3. Testando endpoint de cache...');
    const response = await axios.get(`${BASE_URL}/cache/get?key=test`);
    console.log('‚úÖ Cache endpoint OK:', response.data);
  } catch (error) {
    if (error.response?.status === 401) {
      console.log('‚úÖ Cache endpoint protegido corretamente (401)');
    } else {
      console.log('‚ùå Cache endpoint erro:', error.message);
    }
  }

  // Test institutions endpoint (should return 401 without auth)
  try {
    console.log('\n4. Testando endpoint de institui√ß√µes...');
    const response = await axios.get(`${BASE_URL}/api/institutions`);
    console.log('‚úÖ Institutions endpoint OK:', response.data);
  } catch (error) {
    if (error.response?.status === 401) {
      console.log('‚úÖ Institutions endpoint protegido corretamente (401)');
    } else {
      console.log('‚ùå Institutions endpoint erro:', error.message);
    }
  }

  // Test users endpoint (should return 401 without auth)
  try {
    console.log('\n5. Testando endpoint de usu√°rios...');
    const response = await axios.get(`${BASE_URL}/api/users`);
    console.log('‚úÖ Users endpoint OK:', response.data);
  } catch (error) {
    if (error.response?.status === 401) {
      console.log('‚úÖ Users endpoint protegido corretamente (401)');
    } else {
      console.log('‚ùå Users endpoint erro:', error.message);
    }
  }

  // Test 404 handler
  try {
    console.log('\n6. Testando handler 404...');
    const response = await axios.get(`${BASE_URL}/api/nonexistent`);
    console.log('‚ùå Deveria retornar 404');
  } catch (error) {
    if (error.response?.status === 404) {
      console.log('‚úÖ Handler 404 funcionando corretamente');
    } else {
      console.log('‚ùå Handler 404 erro:', error.message);
    }
  }

  console.log('\nüèÅ Teste conclu√≠do!');
}

testEndpoints().catch(console.error); 