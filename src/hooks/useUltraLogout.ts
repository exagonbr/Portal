/**
 * Hook para realizar logout ultra-completo
 * Limpa TUDO TUDO TUDO e volta para o login
 */

import { useCallback } from 'react';
import { performUltraLogout } from '../services/ultraLogoutService';

export function useUltraLogout() {
  const logout = useCallback(async () => {
    try {
      console.log('üö® useUltraLogout: Iniciando logout ultra-completo...');
      
      // Confirmar com o usu√°rio se necess√°rio
      const confirmLogout = window.confirm(
        'Tem certeza que deseja sair? Todos os dados ser√£o limpos e voc√™ ser√° redirecionado para o login.'
      );
      
      if (!confirmLogout) {
        console.log('‚ùå useUltraLogout: Logout cancelado pelo usu√°rio');
        return false;
      }
      
      // Executar ultra logout
      await performUltraLogout();
      
      return true;
    } catch (error) {
      console.error('‚ùå useUltraLogout: Erro durante logout:', error);
      
      // Fallback: redirecionamento manual
      if (typeof window !== 'undefined') {
        window.location.href = '/auth/login?logout=error';
      }
      
      return false;
    }
  }, []);

  const logoutWithoutConfirmation = useCallback(async () => {
    try {
      console.log('üö® useUltraLogout: Logout sem confirma√ß√£o...');
      await performUltraLogout();
      return true;
    } catch (error) {
      console.error('‚ùå useUltraLogout: Erro durante logout sem confirma√ß√£o:', error);
      
      // Fallback: redirecionamento manual
      if (typeof window !== 'undefined') {
        window.location.href = '/auth/login?logout=error';
      }
      
      return false;
    }
  }, []);

  const emergencyLogout = useCallback(async () => {
    try {
      console.log('üö® useUltraLogout: LOGOUT DE EMERG√äNCIA...');
      
      // Limpeza de emerg√™ncia imediata
      if (typeof window !== 'undefined') {
        localStorage.clear();
        sessionStorage.clear();
        
        // Limpar cookies principais
        const mainCookies = ['auth_token', 'session_id', 'user_data', 'refresh_token'];
        mainCookies.forEach(cookie => {
          document.cookie = `${cookie}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`;
        });
      }
      
      // Redirecionar imediatamente
      window.location.href = '/auth/login?logout=emergency';
      
      return true;
    } catch (error) {
      console.error('‚ùå useUltraLogout: Erro no logout de emerg√™ncia:', error);
      return false;
    }
  }, []);

  return {
    logout,                    // Logout com confirma√ß√£o
    logoutWithoutConfirmation, // Logout sem confirma√ß√£o
    emergencyLogout           // Logout de emerg√™ncia
  };
} 