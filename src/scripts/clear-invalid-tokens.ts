// Script para limpar tokens inv√°lidos do localStorage
// Execute este script no console do navegador se estiver enfrentando problemas com tokens

export const clearInvalidTokensScript = () => {
  if (typeof window === 'undefined') {
    console.error('Este script deve ser executado no navegador');
    return;
  }

  console.group('üßπ Limpeza Manual de Tokens Inv√°lidos');
  
  try {
    // Verificar token principal
    const accessToken = localStorage.getItem('accessToken');
    if (accessToken) {
      console.log('üîç Token accessToken encontrado:', {
        length: accessToken.length,
        preview: accessToken.substring(0, 50) + '...'
      });
      
      const parts = accessToken.split('.');
      if (parts.length !== 3) {
        console.warn('‚ùå Token accessToken inv√°lido (n√£o tem 3 partes), removendo...');
        localStorage.removeItem('accessToken');
        console.log('‚úÖ Token accessToken removido');
      } else {
        console.log('‚úÖ Token accessToken tem formato v√°lido');
      }
    }

    // Verificar outros tokens poss√≠veis
    const otherTokenKeys = ['authToken', 'token', 'jwt', 'bearerToken'];
    otherTokenKeys.forEach(key => {
      const token = localStorage.getItem(key);
      if (token) {
        console.log(`üîç Token ${key} encontrado, removendo...`);
        localStorage.removeItem(key);
        console.log(`‚úÖ Token ${key} removido`);
      }
    });

    // Limpar dados relacionados √† autentica√ß√£o
    const authKeys = ['user', 'userData', 'authState', 'isAuthenticated'];
    authKeys.forEach(key => {
      if (localStorage.getItem(key)) {
        console.log(`üîç Removendo ${key}...`);
        localStorage.removeItem(key);
      }
    });

    console.log('‚úÖ Limpeza conclu√≠da. Recarregue a p√°gina.');
    
  } catch (error) {
    console.error('‚ùå Erro durante limpeza:', error);
  }
  
  console.groupEnd();
};

// Fun√ß√£o para executar no console do navegador
export const runTokenCleanup = () => {
  clearInvalidTokensScript();
  
  // Recarregar a p√°gina ap√≥s limpeza
  setTimeout(() => {
    window.location.reload();
  }, 1000);
};

// Tornar dispon√≠vel globalmente para debug
if (typeof window !== 'undefined') {
  (window as any).clearInvalidTokens = clearInvalidTokensScript;
  (window as any).runTokenCleanup = runTokenCleanup;
} 