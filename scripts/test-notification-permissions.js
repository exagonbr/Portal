/**
 * Script para testar as permiss√µes de notifica√ß√£o
 * Executa os testes das fun√ß√µes de controle de acesso
 */

// Simular as fun√ß√µes de permiss√£o (vers√£o simplificada para teste)
function normalizeRole(role) {
  if (!role) return null;
  
  const normalized = role.trim().toLowerCase();
  
  const roleVariations = {
    'aluno': 'student',
    'estudante': 'student',
    'professor': 'teacher',
    'docente': 'teacher',
    'administrador': 'system_admin',
    'admin': 'system_admin',
    'system_admin': 'system_admin',
    'gestor': 'institution_manager',
    'gerente': 'institution_manager',
    'institution_manager': 'institution_manager',
    'coordenador acad√™mico': 'academic_coordinator',
    'coordenador': 'academic_coordinator',
    'academic_coordinator': 'academic_coordinator',
    'respons√°vel': 'guardian',
    'pai': 'guardian',
    'm√£e': 'guardian',
    'guardian': 'guardian'
  };
  
  return roleVariations[normalized] || normalized;
}

function canSendNotifications(role) {
  if (!role) {
    console.log('‚ùå canSendNotifications: role √© null/undefined');
    return false;
  }

  console.log(`üîç canSendNotifications: verificando permiss√£o para role "${role}"`);

  const normalizedRole = normalizeRole(role) || role.toLowerCase();
  
  const restrictedRoles = [
    'student', 'aluno', 'estudante',
    'guardian', 'respons√°vel', 'pai', 'm√£e'
  ];
  
  const isRestricted = restrictedRoles.some(restricted => {
    return normalizedRole === restricted || 
           role.toLowerCase() === restricted ||
           role.toLowerCase().includes(restricted) ||
           restricted.includes(role.toLowerCase());
  });

  if (isRestricted) {
    console.log(`‚ùå canSendNotifications: role "${role}" n√£o pode enviar notifica√ß√µes (restrita)`);
    return false;
  }

  console.log(`‚úÖ canSendNotifications: role "${role}" pode enviar notifica√ß√µes`);
  return true;
}

function getNotifiableRoles(userRole) {
  if (!userRole || !canSendNotifications(userRole)) {
    return [];
  }

  const normalizedRole = normalizeRole(userRole) || userRole.toLowerCase();
  
  if (normalizedRole === 'system_admin' || userRole.toLowerCase().includes('admin')) {
    return [
      'institution_manager', 'gestor', 'manager',
      'academic_coordinator', 'coordenador',
      'teacher', 'professor',
      'student', 'aluno',
      'guardian', 'respons√°vel'
    ];
  }
  
  if (normalizedRole === 'institution_manager' || userRole.toLowerCase().includes('gestor')) {
    return [
      'academic_coordinator', 'coordenador',
      'teacher', 'professor',
      'student', 'aluno',
      'guardian', 'respons√°vel'
    ];
  }
  
  if (normalizedRole === 'academic_coordinator' || userRole.toLowerCase().includes('coordenador')) {
    return [
      'teacher', 'professor',
      'student', 'aluno',
      'guardian', 'respons√°vel'
    ];
  }
  
  if (normalizedRole === 'teacher' || userRole.toLowerCase().includes('professor')) {
    return [
      'student', 'aluno',
      'guardian', 'respons√°vel'
    ];
  }
  
  return ['student', 'aluno'];
}

// Executar testes
function testNotificationPermissions() {
  const testRoles = [
    'SYSTEM_ADMIN', 'system_admin', 'admin', 'administrador',
    'INSTITUTION_MANAGER', 'institution_manager', 'gestor', 'manager',
    'ACADEMIC_COORDINATOR', 'academic_coordinator', 'coordenador',
    'TEACHER', 'teacher', 'professor',
    'STUDENT', 'student', 'aluno',
    'GUARDIAN', 'guardian', 'respons√°vel'
  ];
  
  console.log('üß™ Testando permiss√µes de notifica√ß√£o:');
  console.log('=====================================');
  
  testRoles.forEach(role => {
    const canSend = canSendNotifications(role);
    const notifiableRoles = getNotifiableRoles(role);
    
    console.log(`\nüìã ${role}:`);
    console.log(`   Pode enviar notifica√ß√µes: ${canSend ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
    if (canSend) {
      console.log(`   Pode notificar: [${notifiableRoles.join(', ')}]`);
    }
  });
  
  console.log('\n=====================================');
  console.log('‚úÖ Teste conclu√≠do!');
  console.log('\nüìä Resumo:');
  console.log('   ‚úÖ Roles que PODEM enviar: System Admin, Institution Manager, Academic Coordinator, Teacher');
  console.log('   ‚ùå Roles que N√ÉO podem enviar: Student, Guardian');
}

// Executar o teste
testNotificationPermissions(); 