#!/bin/bash

# Script para resolver conflito de server_name no Nginx

echo "üîß Resolvendo conflito de configura√ß√£o do Nginx..."

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

DOMAIN="portal.sabercon.com.br"

echo -e "\n${BLUE}1. Procurando configura√ß√µes duplicadas...${NC}"

# Listar todos os arquivos que cont√™m o dom√≠nio
echo -e "\n${YELLOW}Arquivos que cont√™m '$DOMAIN':${NC}"
sudo grep -r "$DOMAIN" /etc/nginx/sites-enabled/ /etc/nginx/sites-available/ /etc/nginx/conf.d/ 2>/dev/null | grep -v "Binary file" | cut -d: -f1 | sort | uniq

# Contar quantas vezes aparece em sites-enabled
ENABLED_COUNT=$(sudo grep -r "server_name.*$DOMAIN" /etc/nginx/sites-enabled/ 2>/dev/null | grep -v "#" | wc -l)
echo -e "\n${YELLOW}Configura√ß√µes ativas encontradas: $ENABLED_COUNT${NC}"

if [ $ENABLED_COUNT -gt 1 ]; then
    echo -e "${RED}‚ùå M√∫ltiplas configura√ß√µes ativas detectadas!${NC}"
    
    # Listar arquivos em sites-enabled
    echo -e "\n${YELLOW}Arquivos em sites-enabled com o dom√≠nio:${NC}"
    sudo grep -l "server_name.*$DOMAIN" /etc/nginx/sites-enabled/* 2>/dev/null
    
    # Backup das configura√ß√µes
    echo -e "\n${BLUE}2. Fazendo backup das configura√ß√µes...${NC}"
    sudo mkdir -p /etc/nginx/backup
    sudo cp -r /etc/nginx/sites-enabled /etc/nginx/backup/sites-enabled-$(date +%Y%m%d-%H%M%S)
    echo -e "${GREEN}‚úÖ Backup criado${NC}"
    
    # Identificar qual configura√ß√£o manter
    echo -e "\n${BLUE}3. Analisando configura√ß√µes...${NC}"
    
    # Procurar pela configura√ß√£o mais completa (com SSL)
    SSL_CONFIG=""
    for file in /etc/nginx/sites-enabled/*; do
        if sudo grep -q "server_name.*$DOMAIN" "$file" 2>/dev/null && sudo grep -q "ssl_certificate" "$file" 2>/dev/null; then
            SSL_CONFIG="$file"
            echo -e "${GREEN}‚úÖ Configura√ß√£o com SSL encontrada: $file${NC}"
            break
        fi
    done
    
    # Se encontrou configura√ß√£o com SSL, desabilitar as outras
    if [ -n "$SSL_CONFIG" ]; then
        echo -e "\n${BLUE}4. Desabilitando configura√ß√µes duplicadas...${NC}"
        for file in /etc/nginx/sites-enabled/*; do
            if [ "$file" != "$SSL_CONFIG" ] && sudo grep -q "server_name.*$DOMAIN" "$file" 2>/dev/null; then
                filename=$(basename "$file")
                echo -e "${YELLOW}Desabilitando: $filename${NC}"
                sudo rm "$file"
            fi
        done
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Nenhuma configura√ß√£o com SSL encontrada${NC}"
        echo "Mantendo apenas a primeira configura√ß√£o encontrada..."
        
        # Manter apenas a primeira configura√ß√£o
        FIRST_CONFIG=$(sudo grep -l "server_name.*$DOMAIN" /etc/nginx/sites-enabled/* 2>/dev/null | head -1)
        if [ -n "$FIRST_CONFIG" ]; then
            echo -e "${GREEN}Mantendo: $FIRST_CONFIG${NC}"
            for file in /etc/nginx/sites-enabled/*; do
                if [ "$file" != "$FIRST_CONFIG" ] && sudo grep -q "server_name.*$DOMAIN" "$file" 2>/dev/null; then
                    filename=$(basename "$file")
                    echo -e "${YELLOW}Desabilitando: $filename${NC}"
                    sudo rm "$file"
                fi
            done
        fi
    fi
else
    echo -e "${GREEN}‚úÖ Apenas uma configura√ß√£o ativa encontrada${NC}"
fi

# Verificar tamb√©m em conf.d
echo -e "\n${BLUE}5. Verificando /etc/nginx/conf.d/...${NC}"
CONFD_COUNT=$(sudo grep -r "server_name.*$DOMAIN" /etc/nginx/conf.d/ 2>/dev/null | grep -v "#" | wc -l)
if [ $CONFD_COUNT -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Configura√ß√µes encontradas em conf.d: $CONFD_COUNT${NC}"
    sudo grep -l "server_name.*$DOMAIN" /etc/nginx/conf.d/* 2>/dev/null
    echo -e "${YELLOW}Considere revisar estas configura√ß√µes manualmente${NC}"
fi

# Testar configura√ß√£o
echo -e "\n${BLUE}6. Testando configura√ß√£o do Nginx...${NC}"
sudo nginx -t

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Configura√ß√£o v√°lida${NC}"
    
    # Recarregar Nginx
    echo -e "\n${BLUE}7. Recarregando Nginx...${NC}"
    sudo systemctl reload nginx
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Nginx recarregado com sucesso${NC}"
    else
        echo -e "${RED}‚ùå Erro ao recarregar Nginx${NC}"
    fi
else
    echo -e "${RED}‚ùå Erro na configura√ß√£o do Nginx${NC}"
    echo -e "${YELLOW}Verifique os erros acima e corrija manualmente${NC}"
fi

# Mostrar configura√ß√£o final
echo -e "\n${BLUE}8. Configura√ß√£o final:${NC}"
echo -e "\n${YELLOW}Arquivos ativos em sites-enabled:${NC}"
ls -la /etc/nginx/sites-enabled/

echo -e "\n${YELLOW}Configura√ß√µes do dom√≠nio $DOMAIN:${NC}"
sudo grep -r "server_name.*$DOMAIN" /etc/nginx/sites-enabled/ 2>/dev/null | grep -v "#"

echo -e "\n${GREEN}‚úÖ Processo conclu√≠do!${NC}"
echo -e "\n${YELLOW}Dicas:${NC}"
echo "‚Ä¢ Se ainda houver conflitos, verifique /etc/nginx/conf.d/"
echo "‚Ä¢ Backups salvos em /etc/nginx/backup/"
echo "‚Ä¢ Use 'sudo nginx -t' para testar a configura√ß√£o"
echo "‚Ä¢ Use 'sudo systemctl status nginx' para verificar o status" 